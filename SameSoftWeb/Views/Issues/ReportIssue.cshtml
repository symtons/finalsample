@model SameSoftWeb.Models.tblProblem

@{
    ViewBag.Title = "Report Issue";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";


    SameSoftWeb.Models.SameSoftwareWebEntities db = new SameSoftWeb.Models.SameSoftwareWebEntities();




    var customers = db.tblCustomers.Where(a => a.Status == "Active").Select(a=> new
    {
        Id=a.CustomerID,
        Name=a.Customer_Name
    }).ToList();

    var apps = db.tblApplications.Select(a => new
    {
        Id = a.Application_ID,
        Name = a.Application_Name +"("+a.Description+")"
    }).ToList();





        }



<h2>Help Center</h2>


@using (Html.BeginForm("Create","Issues")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Report Issue</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      
        <div class="form-group">
            <span class="control-label col-md-2"><b> Application / System </b></span>
            <div class="col-md-10">
              
                @if (Session["AppID"] != null)
                {
                    @Html.DropDownList("Application_ID", new SelectList(apps, "Id", "Name", Session["AppID"]), " Select Application ", new { @class = "form-control",@disabled="" })
                    <input type="hidden" name="Application_ID" value="@Session["AppID"]" />
                }
                else
                {
                    @Html.DropDownList("Application_ID", new SelectList(apps, "Id", "Name", Session["AppID"]), " Select Application ", new { @class = "form-control" })

                }

                @Html.ValidationMessageFor(model => model.Application_ID, "", new { @class = "text-danger" })
            </div>
        </div>
          <div class="form-group">
        
 <span class = "control-label col-md-2"><b> Customer </b></span>



         



            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Customer_ID, new { htmlAttributes = new { @class = "form-control" } })*@
              

                @if (Session["customer_id"] != null)
                {

                    @Html.DropDownList("Customer_ID", new SelectList(customers, "Id", "Name", Session["customer_id"]), " Select Customer ", new { @class = "form-control",@disabled = "" })

                    <input type="hidden" name="Customer_ID" value="@Session["customer_id"]" />

                }
                else
                {
                    @Html.DropDownList("Customer_ID", new SelectList(customers, "Id", "Name", Session["customer_id"]), " Select Customer ", new { @class = "form-control" })

                }


                    @Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2"><b> Issue Type </b></span>
            <div class="col-md-10">
                
                <input type="radio" name="type" value="Problem"  required=""/>  Problem / Error
                <input type="radio" name="type" value="Required_Feature" required="" />  Required Features (New Features to add)
            
            
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2"><b>  Problem Type(Error Message)  / Feature Type </b></span>
              <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2"><b> Issue Description </b></span>
                 <div class="col-md-10">
              
                     <textarea name="Description" class="form-control" rows="6" cols="10" placeholder="Explain the Problem  / New Feature "></textarea>
                     
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
          
                   </div>
        </div>



        <div class="form-group">
            <span class="control-label col-md-2"><b>  Priority (1 for most argent )</b></span>
            <div class="col-md-10">
                <input type="text" value="100" name="Priority" class="form-control" />

                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>*@
       
       <input type="hidden" name="UserID" value="@Session["UserID"]" />
        <input type="hidden" name="User" value="@Session["FullName"]" />


        @*<div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Solution_Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Solution_Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Solution_Note, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.ErrorDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ErrorDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ErrorDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit Report" class="btn btn-danger" />
            </div>
        </div>
    </div>
}




<style>
        input[type=radio] {
    border: 60px solid red;
    width:20px;
    height:20px;
   
}
</style>